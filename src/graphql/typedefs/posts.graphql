enum SharedWith {
  PUBLIC
  PRIVATE
  FRIENDS
}

enum ContentType {
  IMAGE
  VIDEO
  OBJECT
}

type Point {
  type: String!
  coordinates: [Float!]!
}

type LocationMetadata {
  city: String
  state: String
  country: String
  vectorIndex: Int
  metadata: JSON
}

type Post {
  _id: ID!
  title: String
  hashtags: [String]
  contentType: ContentType
  image: String
  video: String
  object: String
  sharedWith: SharedWith
  isDeleted: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  location: Point!
  locationMetadata: LocationMetadata
  views: Int
  userId: ID
}

type Query {
  getAllPostsByUser(page:Int, pageSize: Int): [Post]
  getPostById(_id: ID): Post
}


type Mutation {
  createPost(input: CreatePostInput!): Post
  updatePost(_id: ID!, input: UpdatePostInput!): Post
  deletePost(_id: ID!): Post
  # Add other mutations here
}

input CreatePostInput {
  title: String
  contentType: ContentType
  image: String
  video: String
  object: String
  sharedWith: SharedWith
  isDeleted: Boolean
  location: [Float!]!
  locationMetadata: LocationMetadataInput
}

input UpdatePostInput {
  contentType: ContentType
  image: String
  video: String
  object: String
  sharedWith: SharedWith
  isDeleted: Boolean
}

input PointInput {
  coordinates: [Float!]!
}

input LocationMetadataInput {
  city: String
  state: String
  country: String
  vectorIndex: Int
  metadata: JSON
}

scalar DateTime
scalar JSON
