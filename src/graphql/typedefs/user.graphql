type User {
  _id: ID!
  username: String
  email: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isDeleted: Boolean
  friendCount: Int
  friends: [ID]
}

type Query {
  getUserById(id: ID!): User
}

type Mutation {
  auth (payload: AuthUserInput): AuthPayload
  updateUser(id: ID!, input: UpdateUserInput!): User
  deleteUser(id: ID!): User
}

LoginUserInput {
  email: String!
  firebaseToken: String!
}

AuthPayload {
  token: String
  user: User
}

AuthUserInput {
  firebaseToken: String!
  name: String
}

input UpdateUserInput {
  username: String
  email: String
  name: String
  isDeleted: Boolean
  friends: [ID]
}

scalar DateTime
